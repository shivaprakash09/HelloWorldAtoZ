-------------------
HelloWorld : GTK
-------------------

GTK Application in C++:
----------------------------------------------------------
#include <iostream>
#include <gtkmm/main.h>
#include <gtkmm/button.h>
#include <gtkmm/window.h>
using namespace std;

class HelloWorld : public Gtk::Window {
public:
 HelloWorld();
 virtual ~HelloWorld();
protected:
 Gtk::Button m_button;
 virtual void on_button_clicked();
};

HelloWorld::HelloWorld()
: m_button("Hello, World!") {
 set_border_width(10);
 m_button.signal_clicked().connect(SigC::slot(*this,
 &HelloWorld::on_button_clicked));
 add(m_button);
 m_button.show();
}

HelloWorld::~HelloWorld() {}

void HelloWorld::on_button_clicked() {
 cout << "Hello, World!" << endl;
}

int main (int argc, char *argv[]) {
 Gtk::Main kit(argc, argv);
 HelloWorld helloworld;
 Gtk::Main::run(helloworld);
 return 0;
}

GTK Application in C#:
----------------------------------------------------------
using Gtk;
using GtkSharp;
using System;

class Hello {

 static void Main()
 {
 Application.Init ();

 Window window = new Window("");
 window.DeleteEvent += cls_evn;
 Button close = new Button ("Hello world");
 close.Clicked += new EventHandler(cls_evn);

 window.Add(close);
 window.ShowAll();

 Application.Run ();

 }

 static void cls_evn(object obj, EventArgs args)
 {
 Application.Quit();
 }

}